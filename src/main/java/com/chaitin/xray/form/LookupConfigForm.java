package com.chaitin.xray.form;

import com.chaitin.xray.utils.StringUtil;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.yaml.snakeyaml.Yaml;

import javax.swing.*;
import java.awt.*;
import java.nio.file.Files;
import java.nio.file.Paths;

public class LookupConfigForm {
    public JPanel lookupConfigPanel;
    private JTextArea configTextArea;
    private JButton saveConfigButton;
    private JButton refreshConfigButton;
    private JScrollPane configTextPanel;
    private JPanel configButtonPanel;

    public LookupConfigForm() {
        configTextArea.setText(MainForm.configStr);
        configTextArea.setCaretPosition(0);

        refreshConfigButton.addActionListener(e -> {
            if (!StringUtil.notEmpty(MainForm.configPath)) {
                JOptionPane.showMessageDialog(null, "无法刷新");
                return;
            }
            try {
                byte[] data = Files.readAllBytes(Paths.get(MainForm.configPath));
                configTextArea.setText(null);
                configTextArea.setText(new String(data));
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            JOptionPane.showMessageDialog(null, "已刷新配置");
        });

        saveConfigButton.addActionListener(e -> {
            if (!StringUtil.notEmpty(MainForm.configPath)) {
                JOptionPane.showMessageDialog(null, "无法保存");
                return;
            }
            try {
                Yaml yaml = new Yaml();
                String newConfig = configTextArea.getText();
                MainForm.configObj = yaml.load(newConfig);

                MainForm.configStr = newConfig;

                MainForm.instance.reloadConfig(false);

                Files.write(Paths.get(MainForm.configPath), newConfig.getBytes());
                JOptionPane.showMessageDialog(null, "已保存配置");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "您的配置有误");
                ex.printStackTrace();
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        lookupConfigPanel = new JPanel();
        lookupConfigPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        lookupConfigPanel.setBackground(new Color(-725535));
        configTextPanel = new JScrollPane();
        configTextPanel.setBackground(new Color(-725535));
        lookupConfigPanel.add(configTextPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(500, 500), new Dimension(500, 500), new Dimension(500, 500), 0, false));
        configTextArea = new JTextArea();
        configTextArea.setBackground(new Color(-725535));
        configTextArea.setForeground(new Color(-12828863));
        configTextPanel.setViewportView(configTextArea);
        configButtonPanel = new JPanel();
        configButtonPanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        configButtonPanel.setBackground(new Color(-725535));
        lookupConfigPanel.add(configButtonPanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        saveConfigButton = new JButton();
        saveConfigButton.setText("保存配置文件");
        configButtonPanel.add(saveConfigButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        refreshConfigButton = new JButton();
        refreshConfigButton.setText("刷新最新配置文件");
        configButtonPanel.add(refreshConfigButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return lookupConfigPanel;
    }

}
